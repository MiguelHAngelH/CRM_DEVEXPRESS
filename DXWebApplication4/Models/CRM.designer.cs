#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXWebApplication4.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRM")]
	public partial class CRMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertPais(Pais instance);
    partial void UpdatePais(Pais instance);
    partial void DeletePais(Pais instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertCuenta(Cuenta instance);
    partial void UpdateCuenta(Cuenta instance);
    partial void DeleteCuenta(Cuenta instance);
    #endregion
		
		public CRMDataContext() : 
				base("Data Source=MIGUEL\\MIGUEL;Initial Catalog=CRM;Persist Security Info=True;User ID=" +
						"proyecto;Password=proyecto", mappingSource)
		{
			OnCreated();
		}
		
		public CRMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Pais> Pais
		{
			get
			{
				return this.GetTable<Pais>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contacto
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Cuenta> Cuenta
		{
			get
			{
				return this.GetTable<Cuenta>();
			}
		}
		
		public System.Data.Linq.Table<ContactoCuenta> ContactoCuenta
		{
			get
			{
				return this.GetTable<ContactoCuenta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCiudad;
		
		private string _nombre;
		
		private int _idPais;
		
		private EntitySet<Cuenta> _Cuenta;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCiudadChanging(int value);
    partial void OnidCiudadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidPaisChanging(int value);
    partial void OnidPaisChanged();
    #endregion
		
		public Ciudad()
		{
			this._Cuenta = new EntitySet<Cuenta>(new Action<Cuenta>(this.attach_Cuenta), new Action<Cuenta>(this.detach_Cuenta));
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCiudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCiudad
		{
			get
			{
				return this._idCiudad;
			}
			set
			{
				if ((this._idCiudad != value))
				{
					this.OnidCiudadChanging(value);
					this.SendPropertyChanging();
					this._idCiudad = value;
					this.SendPropertyChanged("idCiudad");
					this.OnidCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPais", DbType="Int NOT NULL")]
		public int idPais
		{
			get
			{
				return this._idPais;
			}
			set
			{
				if ((this._idPais != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPaisChanging(value);
					this.SendPropertyChanging();
					this._idPais = value;
					this.SendPropertyChanged("idPais");
					this.OnidPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Cuenta", Storage="_Cuenta", ThisKey="idCiudad", OtherKey="idCiudad")]
		public EntitySet<Cuenta> Cuenta
		{
			get
			{
				return this._Cuenta;
			}
			set
			{
				this._Cuenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Ciudad", Storage="_Pais", ThisKey="idPais", OtherKey="idPais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Ciudad.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Ciudad.Add(this);
						this._idPais = value.idPais;
					}
					else
					{
						this._idPais = default(int);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuenta(Cuenta entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Cuenta(Cuenta entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPais;
		
		private string _nombre;
		
		private EntitySet<Ciudad> _Ciudad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPaisChanging(int value);
    partial void OnidPaisChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Pais()
		{
			this._Ciudad = new EntitySet<Ciudad>(new Action<Ciudad>(this.attach_Ciudad), new Action<Ciudad>(this.detach_Ciudad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPais
		{
			get
			{
				return this._idPais;
			}
			set
			{
				if ((this._idPais != value))
				{
					this.OnidPaisChanging(value);
					this.SendPropertyChanging();
					this._idPais = value;
					this.SendPropertyChanged("idPais");
					this.OnidPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Ciudad", Storage="_Ciudad", ThisKey="idPais", OtherKey="idPais")]
		public EntitySet<Ciudad> Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				this._Ciudad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idContacto;
		
		private string _nombre;
		
		private string _apellidos;
		
		private System.DateTime _fechaNacimiento;
		
		private string _estadoCivil;
		
		private int _idCargo;
		
		private string _telefono;
		
		private string _correo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidContactoChanging(int value);
    partial void OnidContactoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidosChanging(string value);
    partial void OnapellidosChanged();
    partial void OnfechaNacimientoChanging(System.DateTime value);
    partial void OnfechaNacimientoChanged();
    partial void OnestadoCivilChanging(string value);
    partial void OnestadoCivilChanged();
    partial void OnidCargoChanging(int value);
    partial void OnidCargoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    #endregion
		
		public Contacto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idContacto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idContacto
		{
			get
			{
				return this._idContacto;
			}
			set
			{
				if ((this._idContacto != value))
				{
					this.OnidContactoChanging(value);
					this.SendPropertyChanging();
					this._idContacto = value;
					this.SendPropertyChanged("idContacto");
					this.OnidContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidos
		{
			get
			{
				return this._apellidos;
			}
			set
			{
				if ((this._apellidos != value))
				{
					this.OnapellidosChanging(value);
					this.SendPropertyChanging();
					this._apellidos = value;
					this.SendPropertyChanged("apellidos");
					this.OnapellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoCivil", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estadoCivil
		{
			get
			{
				return this._estadoCivil;
			}
			set
			{
				if ((this._estadoCivil != value))
				{
					this.OnestadoCivilChanging(value);
					this.SendPropertyChanging();
					this._estadoCivil = value;
					this.SendPropertyChanged("estadoCivil");
					this.OnestadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCargo", DbType="Int NOT NULL")]
		public int idCargo
		{
			get
			{
				return this._idCargo;
			}
			set
			{
				if ((this._idCargo != value))
				{
					this.OnidCargoChanging(value);
					this.SendPropertyChanging();
					this._idCargo = value;
					this.SendPropertyChanged("idCargo");
					this.OnidCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cuenta")]
	public partial class Cuenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCuenta;
		
		private string _tipoCuenta;
		
		private string _tipoDocumento;
		
		private string _nroDocumento;
		
		private string _nombre;
		
		private string _telefono;
		
		private string _sitioWeb;
		
		private string _rubro;
		
		private int _idCiudad;
		
		private int _idColaboradorAsignado;
		
		private string _estado;
		
		private EntityRef<Ciudad> _Ciudad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCuentaChanging(int value);
    partial void OnidCuentaChanged();
    partial void OntipoCuentaChanging(string value);
    partial void OntipoCuentaChanged();
    partial void OntipoDocumentoChanging(string value);
    partial void OntipoDocumentoChanged();
    partial void OnnroDocumentoChanging(string value);
    partial void OnnroDocumentoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnsitioWebChanging(string value);
    partial void OnsitioWebChanged();
    partial void OnrubroChanging(string value);
    partial void OnrubroChanged();
    partial void OnidCiudadChanging(int value);
    partial void OnidCiudadChanged();
    partial void OnidColaboradorAsignadoChanging(int value);
    partial void OnidColaboradorAsignadoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Cuenta()
		{
			this._Ciudad = default(EntityRef<Ciudad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCuenta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCuenta
		{
			get
			{
				return this._idCuenta;
			}
			set
			{
				if ((this._idCuenta != value))
				{
					this.OnidCuentaChanging(value);
					this.SendPropertyChanging();
					this._idCuenta = value;
					this.SendPropertyChanged("idCuenta");
					this.OnidCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoCuenta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tipoCuenta
		{
			get
			{
				return this._tipoCuenta;
			}
			set
			{
				if ((this._tipoCuenta != value))
				{
					this.OntipoCuentaChanging(value);
					this.SendPropertyChanging();
					this._tipoCuenta = value;
					this.SendPropertyChanged("tipoCuenta");
					this.OntipoCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoDocumento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tipoDocumento
		{
			get
			{
				return this._tipoDocumento;
			}
			set
			{
				if ((this._tipoDocumento != value))
				{
					this.OntipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._tipoDocumento = value;
					this.SendPropertyChanged("tipoDocumento");
					this.OntipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nroDocumento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nroDocumento
		{
			get
			{
				return this._nroDocumento;
			}
			set
			{
				if ((this._nroDocumento != value))
				{
					this.OnnroDocumentoChanging(value);
					this.SendPropertyChanging();
					this._nroDocumento = value;
					this.SendPropertyChanged("nroDocumento");
					this.OnnroDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sitioWeb", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sitioWeb
		{
			get
			{
				return this._sitioWeb;
			}
			set
			{
				if ((this._sitioWeb != value))
				{
					this.OnsitioWebChanging(value);
					this.SendPropertyChanging();
					this._sitioWeb = value;
					this.SendPropertyChanged("sitioWeb");
					this.OnsitioWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rubro", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string rubro
		{
			get
			{
				return this._rubro;
			}
			set
			{
				if ((this._rubro != value))
				{
					this.OnrubroChanging(value);
					this.SendPropertyChanging();
					this._rubro = value;
					this.SendPropertyChanged("rubro");
					this.OnrubroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCiudad", DbType="Int NOT NULL")]
		public int idCiudad
		{
			get
			{
				return this._idCiudad;
			}
			set
			{
				if ((this._idCiudad != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCiudadChanging(value);
					this.SendPropertyChanging();
					this._idCiudad = value;
					this.SendPropertyChanged("idCiudad");
					this.OnidCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idColaboradorAsignado", DbType="Int NOT NULL")]
		public int idColaboradorAsignado
		{
			get
			{
				return this._idColaboradorAsignado;
			}
			set
			{
				if ((this._idColaboradorAsignado != value))
				{
					this.OnidColaboradorAsignadoChanging(value);
					this.SendPropertyChanging();
					this._idColaboradorAsignado = value;
					this.SendPropertyChanged("idColaboradorAsignado");
					this.OnidColaboradorAsignadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Cuenta", Storage="_Ciudad", ThisKey="idCiudad", OtherKey="idCiudad", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Cuenta.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Cuenta.Add(this);
						this._idCiudad = value.idCiudad;
					}
					else
					{
						this._idCiudad = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactoCuenta")]
	public partial class ContactoCuenta
	{
		
		private int _idCuenta;
		
		private int _idContacto;
		
		public ContactoCuenta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCuenta", DbType="Int NOT NULL")]
		public int idCuenta
		{
			get
			{
				return this._idCuenta;
			}
			set
			{
				if ((this._idCuenta != value))
				{
					this._idCuenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idContacto", DbType="Int NOT NULL")]
		public int idContacto
		{
			get
			{
				return this._idContacto;
			}
			set
			{
				if ((this._idContacto != value))
				{
					this._idContacto = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
